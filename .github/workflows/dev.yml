name: dev
on: 
  #workflow_dispatch
  push:
    branches:
      - develop

jobs:
  deploy:
    environment:
      name: dev
    name: Build and deploy
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Config
        env:
          HELM_VALUES: ${{ secrets.AWS_HELM_VALUES }}
        shell: bash
        run: 'echo "$HELM_VALUES" > ./values.yaml'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION}}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push images
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_REPO_NAME }}
          IMAGE_TAG: dev-back-end_php
        run: |
          docker-compose -f docker-compose.yml -f docker-compose.dev.yml build --no-cache php
          docker tag $IMAGE_TAG:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy
        uses: wahyd4/kubectl-helm-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.AWS_KUBE_CONFIG_DATA }}
        with:
          args: |
            helm dependency update helm/api-platform
            helm uninstall dev-cobalt-back-end
            helm install dev-cobalt-back-end ./helm/api-platform --namespace=cobalt -f ./values.yaml

